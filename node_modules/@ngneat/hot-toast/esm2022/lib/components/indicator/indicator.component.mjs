import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LoaderComponent } from './icons/loader/loader.component';
import { ErrorComponent } from './icons/error/error.component';
import { CheckMarkComponent } from './icons/checkmark/checkmark.component';
import { WarningComponent } from './icons/warning/warning.component';
import { InfoComponent } from './icons/info/info.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class IndicatorComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: IndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.1", type: IndicatorComponent, isStandalone: true, selector: "hot-toast-indicator", inputs: { theme: "theme", type: "type" }, ngImport: i0, template: "<div *ngIf=\"type !== 'blank'\" class=\"hot-toast-indicator-wrapper\">\n  <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n  <div *ngIf=\"type !== 'loading'\" class=\"hot-toast-status-wrapper\">\n    <div [ngSwitch]=\"type\">\n      <div *ngSwitchCase=\"'error'\">\n        <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n      </div>\n      <div *ngSwitchCase=\"'success'\">\n        <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n      </div>\n      <div *ngSwitchCase=\"'warning'\">\n        <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n      </div>\n      <div *ngSwitchCase=\"'info'\">\n        <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n      </div>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: LoaderComponent, selector: "hot-toast-loader", inputs: ["theme"] }, { kind: "component", type: ErrorComponent, selector: "hot-toast-error", inputs: ["theme"] }, { kind: "component", type: CheckMarkComponent, selector: "hot-toast-checkmark", inputs: ["theme"] }, { kind: "component", type: WarningComponent, selector: "hot-toast-warning", inputs: ["theme"] }, { kind: "component", type: InfoComponent, selector: "hot-toast-info", inputs: ["theme"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: IndicatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'hot-toast-indicator', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CommonModule, LoaderComponent, ErrorComponent, CheckMarkComponent, WarningComponent, InfoComponent], template: "<div *ngIf=\"type !== 'blank'\" class=\"hot-toast-indicator-wrapper\">\n  <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n  <div *ngIf=\"type !== 'loading'\" class=\"hot-toast-status-wrapper\">\n    <div [ngSwitch]=\"type\">\n      <div *ngSwitchCase=\"'error'\">\n        <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n      </div>\n      <div *ngSwitchCase=\"'success'\">\n        <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n      </div>\n      <div *ngSwitchCase=\"'warning'\">\n        <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n      </div>\n      <div *ngSwitchCase=\"'info'\">\n        <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n      </div>\n    </div>\n  </div>\n</div>\n" }]
        }], propDecorators: { theme: [{
                type: Input
            }], type: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWNhdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nbmVhdC9ob3QtdG9hc3Qvc3JjL2xpYi9jb21wb25lbnRzL2luZGljYXRvci9pbmRpY2F0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmduZWF0L2hvdC10b2FzdC9zcmMvbGliL2NvbXBvbmVudHMvaW5kaWNhdG9yL2luZGljYXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7OztBQVM1RCxNQUFNLE9BQU8sa0JBQWtCOzhHQUFsQixrQkFBa0I7a0dBQWxCLGtCQUFrQix5SENqQi9CLHd1QkFtQkEsMkNESlksWUFBWSwrVEFBRSxlQUFlLGdGQUFFLGNBQWMsK0VBQUUsa0JBQWtCLG1GQUFFLGdCQUFnQixpRkFBRSxhQUFhOzsyRkFFakcsa0JBQWtCO2tCQVA5QixTQUFTOytCQUNFLHFCQUFxQixtQkFFZCx1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUCxDQUFDLFlBQVksRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQzs4QkFHcEcsS0FBSztzQkFBYixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBJY29uVGhlbWUsIFRvYXN0VHlwZSB9IGZyb20gJy4uLy4uL2hvdC10b2FzdC5tb2RlbCc7XG5pbXBvcnQgeyBMb2FkZXJDb21wb25lbnQgfSBmcm9tICcuL2ljb25zL2xvYWRlci9sb2FkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEVycm9yQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy9lcnJvci9lcnJvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2hlY2tNYXJrQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy9jaGVja21hcmsvY2hlY2ttYXJrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBXYXJuaW5nQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy93YXJuaW5nL3dhcm5pbmcuY29tcG9uZW50JztcbmltcG9ydCB7IEluZm9Db21wb25lbnQgfSBmcm9tICcuL2ljb25zL2luZm8vaW5mby5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdob3QtdG9hc3QtaW5kaWNhdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICdpbmRpY2F0b3IuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTG9hZGVyQ29tcG9uZW50LCBFcnJvckNvbXBvbmVudCwgQ2hlY2tNYXJrQ29tcG9uZW50LCBXYXJuaW5nQ29tcG9uZW50LCBJbmZvQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgSW5kaWNhdG9yQ29tcG9uZW50IHtcbiAgQElucHV0KCkgdGhlbWU6IEljb25UaGVtZTtcbiAgQElucHV0KCkgdHlwZTogVG9hc3RUeXBlO1xufVxuIiwiPGRpdiAqbmdJZj1cInR5cGUgIT09ICdibGFuaydcIiBjbGFzcz1cImhvdC10b2FzdC1pbmRpY2F0b3Itd3JhcHBlclwiPlxuICA8aG90LXRvYXN0LWxvYWRlciBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC1sb2FkZXI+XG4gIDxkaXYgKm5nSWY9XCJ0eXBlICE9PSAnbG9hZGluZydcIiBjbGFzcz1cImhvdC10b2FzdC1zdGF0dXMtd3JhcHBlclwiPlxuICAgIDxkaXYgW25nU3dpdGNoXT1cInR5cGVcIj5cbiAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidlcnJvcidcIj5cbiAgICAgICAgPGhvdC10b2FzdC1lcnJvciBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC1lcnJvcj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ3N1Y2Nlc3MnXCI+XG4gICAgICAgIDxob3QtdG9hc3QtY2hlY2ttYXJrIFt0aGVtZV09XCJ0aGVtZVwiPjwvaG90LXRvYXN0LWNoZWNrbWFyaz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ3dhcm5pbmcnXCI+XG4gICAgICAgIDxob3QtdG9hc3Qtd2FybmluZyBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC13YXJuaW5nPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInaW5mbydcIj5cbiAgICAgICAgPGhvdC10b2FzdC1pbmZvIFt0aGVtZV09XCJ0aGVtZVwiPjwvaG90LXRvYXN0LWluZm8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==